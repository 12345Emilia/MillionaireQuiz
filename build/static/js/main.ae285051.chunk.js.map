{"version":3,"sources":["components/Timer.jsx","assets/play.wav","assets/correct.mp3","assets/wrong.mp3","components/Trivia.jsx","components/Start.jsx","App.js","index.js"],"names":["Timer","setStop","questionNumber","useState","timer","setTimer","useEffect","interval","setInterval","prev","clearInterval","Trivia","data","setQuestionNumber","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","useSound","play","letsPlay","correct","correctAnswer","wrong","wrongAnswer","delay","duration","callback","setTimeout","answers","map","a","onClick","handleClick","text","Start","setUsername","inputRef","useRef","placeholder","ref","current","value","App","username","stop","earned","setEarned","moneyPyramid","useMemo","id","amount","reverse","find","m","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae285051.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function Timer({ setStop, questionNumber }) {\n  const [timer, setTimer] = useState(30);\n\n  useEffect(() => {\n    if (timer === 0) return setStop(true);\n    const interval = setInterval(() => {\n      setTimer((prev) => prev - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [setStop, timer]);\n\n  useEffect(() => {\n    setTimer(30);\n  }, [questionNumber]);\n  return timer;\n}\n","export default __webpack_public_path__ + \"static/media/play.57e5fa4c.wav\";","export default __webpack_public_path__ + \"static/media/correct.160572d7.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.e9468218.mp3\";","import { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\nimport play from '../assets/play.wav';\nimport correct from '../assets/correct.mp3';\nimport wrong from '../assets/wrong.mp3';\n\nexport default function Trivia({\n  data,\n  setStop,\n  questionNumber,\n  setQuestionNumber,\n}) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState('answer');\n  const [letsPlay] = useSound(play);\n  const [correctAnswer] = useSound(correct);\n  const [wrongAnswer] = useSound(wrong);\n\n  useEffect(() => {\n    letsPlay();\n  }, [letsPlay]);\n\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n\n  const handleClick = (a) => {\n    setSelectedAnswer(a);\n    setClassName('answer active');\n    delay(1000, () =>\n      setClassName(a.correct ? 'answer correct' : 'answer wrong')\n    );\n    delay(5000, () => {\n      if (a.correct) {\n        correctAnswer();\n        delay(1000, () => {\n          setQuestionNumber((prev) => prev + 1);\n          setSelectedAnswer(null);\n        });\n      } else {\n        wrongAnswer();\n        delay(1000, () => {\n          setStop(true);\n        });\n      }\n    });\n  };\n\n  return (\n    <div className='trivia'>\n      <div className='question'>{question?.question}</div>\n      <div className='answers'>\n        {question?.answers.map((a) => (\n          <div\n            className={selectedAnswer === a ? className : 'answer'}\n            onClick={() => handleClick(a)}>\n            {a.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useRef } from 'react';\n\nexport default function Start({ setUsername }) {\n  const inputRef = useRef();\n\n  const handleClick = () => {\n    inputRef.current.value && setUsername(inputRef.current.value);\n  };\n  return (\n    <div className='start'>\n      <input\n        placeholder='enter your name'\n        className='startInput'\n        ref={inputRef}\n      />\n      <button className='startButton' onClick={handleClick}>\n        Start\n      </button>\n    </div>\n  );\n}\n","import './app.css';\nimport { useEffect, useMemo, useState } from 'react';\nimport Timer from './components/Timer';\nimport Trivia from './components/Trivia';\nimport Start from './components/Start';\n\nfunction App() {\n  const [username, setUsername] = useState(null);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [stop, setStop] = useState(false);\n  const [earned, setEarned] = useState('$ 0');\n\n  const data = [\n    {\n      id: 1,\n      question: \"What's the name of Americas President?\",\n      answers: [\n        {\n          text: 'Joe',\n          correct: true,\n        },\n        {\n          text: 'Donald',\n          correct: false,\n        },\n        {\n          text: 'Tom',\n          correct: false,\n        },\n        {\n          text: 'Michael',\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 2,\n      question: 'Which color is not on the American flag?',\n      answers: [\n        {\n          text: 'Blue',\n          correct: false,\n        },\n        {\n          text: 'Red',\n          correct: false,\n        },\n        {\n          text: 'Green',\n          correct: true,\n        },\n        {\n          text: 'White',\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      question: \"What's the capital of the United States?\",\n      answers: [\n        {\n          text: 'New York',\n          correct: false,\n        },\n        {\n          text: 'Los Angeles',\n          correct: false,\n        },\n        {\n          text: 'Miami',\n          correct: false,\n        },\n        {\n          text: 'Washington D.C',\n          correct: true,\n        },\n      ],\n    },\n  ];\n\n  const moneyPyramid = useMemo(\n    () =>\n      [\n        { id: 1, amount: '$ 100' },\n        { id: 2, amount: '$ 200' },\n        { id: 3, amount: '$ 300' },\n        { id: 4, amount: '$ 500' },\n        { id: 5, amount: '$ 1000' },\n        { id: 6, amount: '$ 2000' },\n        { id: 7, amount: '$ 4000' },\n        { id: 8, amount: '$ 8000' },\n        { id: 9, amount: '$ 16000' },\n        { id: 10, amount: '$ 32000' },\n        { id: 11, amount: '$ 64000' },\n        { id: 12, amount: '$ 125000' },\n        { id: 13, amount: '$ 250000' },\n        { id: 14, amount: '$ 500000' },\n        { id: 15, amount: '$ 1000000' },\n      ].reverse(),\n    []\n  );\n\n  useEffect(() => {\n    questionNumber > 1 &&\n      setEarned(moneyPyramid.find((m) => m.id === questionNumber - 1).amount);\n  }, [moneyPyramid, questionNumber]);\n\n  const handleClick = () => {};\n\n  return (\n    <div className='app'>\n      {username ? (\n        <>\n          <div className='main'>\n            {stop ? (\n              <h1 className='endText'>\n                Congratulations {username}! <br /> You earned: {earned} <br />\n                <button className='playAgain' onClick={handleClick}>\n                  Play again!\n                </button>\n              </h1>\n            ) : (\n              <>\n                <div className='top'>\n                  <div className='timer'>\n                    <Timer setStop={setStop} questionNumber={questionNumber} />\n                  </div>\n                </div>\n                <div className='bottom'>\n                  <Trivia\n                    data={data}\n                    setStop={setStop}\n                    questionNumber={questionNumber}\n                    setQuestionNumber={setQuestionNumber}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className='pyramid'>\n            <ul className='moneyList'>\n              {moneyPyramid.map((m) => (\n                <li\n                  className={\n                    questionNumber === m.id\n                      ? 'moneyListItem active'\n                      : 'moneyListItem'\n                  }>\n                  <span className='moneyListItemNumber'>{m.id}</span>\n                  <span className='moneyListItemAmount'>{m.amount}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      ) : (\n        <Start setUsername={setUsername} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}